import { ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';
import { IconPickerService } from './icon-picker.service';
import { Icon, IconType } from './icon';
export declare class IconPickerComponent implements OnInit {
    private el;
    private cdr;
    private service;
    ipPosition: string;
    ipHeight: number;
    ipMaxHeight: number;
    ipWidth: number;
    ipIconSize: number;
    ipIconVerticalPadding: number;
    ipIconHorizontalPadding: number;
    ipButtonStyleClass: string;
    ipInputSearchStyleClass: string;
    ipDivSearchStyleClass: string;
    ipKeepSearchFilter: boolean;
    ipPlaceHolder: string;
    ipFallbackIcon: string;
    ipIconPack: string[];
    show: boolean;
    hidden: boolean;
    top: number;
    left: number;
    position: string;
    arrowTop: number;
    selectedIcon: Icon;
    iconType: typeof IconType;
    buttonWidth: number;
    buttonHeight: number;
    private directiveInstance;
    private initialIcon;
    private directiveElementRef;
    private listenerMouseDown;
    private listenerResize;
    private dialogArrowSize;
    dialogElement: any;
    icons: Icon[];
    search: string;
    constructor(el: ElementRef, cdr: ChangeDetectorRef, service: IconPickerService);
    setDialog(instance: any, elementRef: ElementRef, icon: string, ipPosition: string, ipHeight: string, ipMaxHeight: string, ipWidth: string, ipPlaceHolder: string, ipFallbackIcon: string, ipIconPack: string[], ipIconSize: string, ipIconVerticalPadding: string, ipIconHorizontalPadding: string, ipButtonStyleClass: string, ipDivSearchStyleClass: string, ipInputSearchStyleClass: string, ipKeepSearchFilter: string): void;
    ngOnInit(): void;
    setInitialIcon(icon: string): void;
    openDialog(icon: string): void;
    setSearch(val: string): void;
    selectIcon(icon: Icon): void;
    onMouseDown(event: any): void;
    openIconPicker(): void;
    closeIconPicker(): void;
    onResize(): void;
    setDialogPosition(): void;
    isDescendant(parent: any, child: any): boolean;
    createBox(element: any, offset: boolean): any;
}
